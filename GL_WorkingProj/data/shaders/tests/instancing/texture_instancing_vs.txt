#version 150 core

in vec3 s_pos;
in vec3 s_normal;
in vec2 s_uv;

uniform mat4 ModelViewProjectionMatrix;

uniform sampler2D s_texture_0;

out vec2 uv;
out vec3 instance_color;

void main()
{
	const vec2 texel_size = vec2(1.0 / 256.0, 1.0 / 16.0);
	const int objects_per_row = 128;
	const vec2 half_texel = vec2(0.5, 0.5);

	//calc texture coordinates - where our instance data located
	//gl_InstanceID % objects_per_row — no of object in the line
	//multiple by 2 as each object has 2 vectors of data
	//gl_InstanceID / objects_per_row — in what line our data located
	//multiple by texel_size gieves us 0..1 uv to sample from texture from interer texel id
	vec2 texel_uv = (vec2((gl_InstanceID % objects_per_row) * 2, floor(float(gl_InstanceID) / float(objects_per_row))) + half_texel) * texel_size;
	
	vec4 instance_pos = textureLod(s_texture_0, texel_uv, 0);
	instance_color = textureLod(s_texture_0, texel_uv + vec2(texel_size.x, 0.0), 0).xyz;

	uv = s_uv;
	
	gl_Position = ModelViewProjectionMatrix * vec4(s_pos + instance_pos.xyz, 1.0);
}