#version 430
#extension GL_ARB_shader_storage_buffer_object : require

in vec3 s_pos;
in vec3 s_normal;
in vec2 s_uv;

uniform mat4 ModelViewProjectionMatrix;
uniform int instance_data_location;

//ssbo should be binded to 0 binding point
layout(std430, binding = 0) buffer ssboData
{
    vec4 instance_data[4096];
};

out vec3 instance_color;

void main()
{
	//just get data from ssbo
	instance_color = fract(
		instance_data[instance_data_location + 0].xyz +
		instance_data[instance_data_location + 1].xyz +
		instance_data[instance_data_location + 2].xyz +
		instance_data[instance_data_location + 3].xyz +
		instance_data[instance_data_location + 4].xyz +
		instance_data[instance_data_location + 5].xyz +
		instance_data[instance_data_location + 6].xyz +
		instance_data[instance_data_location + 7].xyz +
		instance_data[instance_data_location + 8].xyz +
		instance_data[instance_data_location + 9].xyz);
	gl_Position = ModelViewProjectionMatrix * vec4(s_pos, 1.0);
}